#!/usr/bin/env bash

script=""
scriptfile="$HOME/work/scripts"
default_interval=180

# check if should output to standard out
if [[ "$1" == "stdio" ]] ; then
    stdio=true
    shift
else
    stdio=false
fi

case "$1" in
    autoclick | watch) # their slackbot doesn't update
        interval=${2:-$default_interval}
        echo clicking at "$interval"
        i=1
        while true; do
            sleep "$interval"
            xdotool click 1
            echo click "#$i"
            i=$((i+1))
        done
        ;;

    remind)
        interval=${2:-$default_interval}
        echo reminding at "$interval"
        i=1
        while true; do
            sleep "$interval"
            echo remind "#$i"
            notify-send -u critical "It's been $interval seconds, check the q"
            i=$((i+1))
        done
        ;;
    beep) # i clearly hate myself
        click=true
        if [[ "$2" == "no" ]] ; then
            click=false
            interval=${3:-120}
            echo "beeping at $interval"
        else
        interval=${2:-120}
        echo "clicking & beeping at $interval"
        fi
        i=1
        while true; do
            sleep "$interval"
            if $click ; then xdotool click 1; fi
            notify-send "It's been $interval seconds, check the q"
            # save the volume and set it to a constant
            vol=$(allume get)
            # allume set 45%
            aplay "$HOME/misc/bedroom communithree.wav" # HERE IT IS AGAIN
            allume set "$vol" # A HEART OF EXCITEMENT
            echo beep "#$i"
            i=$((i+1)) # IN THE FORM OF A GIRL WHO HATES HER LIFE
        done
        ;;

    clip | script) # the quicker i get past the boilerplate stuff the quicker i can actually help
        case "$2" in

            start | hi) script=$(sed -n "1 p" "$scriptfile") ;;

            quick) script=$(sed -n "28 p" "$scriptfile") ;;

            repo)
                studentName=${3:-$(xclip -o)} # copy their name, run this, and you get the repo msg
                script="Hi $studentName! May I have a link to your Github repository to look over?"
                shift
                ;;

            thank | wait | think) script=$(sed -n "13 p" "$scriptfile") ;; # thanks, lemme look

            check | ask) script=$(sed -n "17 p" "$scriptfile") ;; # do u get? or need more helb

            off* ) script=$(sed -n "21 p" "$scriptfile") ;; # go open another ticket pls

            end | done | and) script=$(sed -n "5, 9 p" "$scriptfile") ;; # thanks! bye

            vanish | unresponsive)
                # screw u if i wanna triple nest case statements in my own scripts i will
                case "$3" in

                    hi | back) script=$(sed -n "38, 40 p" "$scriptfile") ;; # hi again

                    fail | end | bye) script=$(sed -n "44 p" "$scriptfile") ;; # begone with ye

                    *) script=$(sed -n "32, 34 p" "$scriptfile") ;; # r u there

                esac
                ;;

            *) echo 'ya done goofed' ; exit ;;

        esac
            if $stdio ; then
                echo "$script"
            else
                echo "$script" | xclip -i -selection 'clipboard'
                notify-send "loaded $2 $studentName"
            fi
        ;;

    seed | mysql)
        # reset my testing db
        mysql -u root -p"password" -e "DROP DATABASE IF EXISTS testing_db; CREATE DATABASE testing_db;"
        cat "$HOME/work/mysql_dotenv" >> .env # overrule their keys with mine
        npm run seed
        ;;

    setup)
        # auth synchronously
        sudo
        # start dbs
        sudo mongod --config /etc/mongodb.conf > /dev/null &
        cd '/usr'
        sudo mariadbd-safe --datadir='/var/lib/mysql' > /dev/null &
        cd -

        # fuck it, launch everything else too
        firefox -P work > /dev/null &
        slack > /dev/null &
        zoom > /dev/null &
        keepassxc > /dev/null &

        ;;
    *) echo 'ya done goofed' ;;
esac

